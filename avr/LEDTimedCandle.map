Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o (exit)
/usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
                              LEDTimedCandle.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                              LEDTimedCandle.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
LOAD LEDTimedCandle.o
LOAD ./i2cmaster/i2cmaster.o
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x2de
 *(.vectors)
 .vectors       0x00000000       0x14 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x00000014                . = ALIGN (0x2)
                0x00000014                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000014        0x0 linker stubs
 *(.trampolines*)
                0x00000014                __trampolines_end = .
 *(.progmem*)
                0x00000014                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000014                __ctors_start = .
 *(.ctors)
                0x00000014                __ctors_end = .
                0x00000014                __dtors_start = .
 *(.dtors)
                0x00000014                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000014        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
                0x00000014                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000014        0x8 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000001c       0x16 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
                0x0000001c                __do_copy_data
 .init4         0x00000032       0x10 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x00000032                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000042        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
 *(.init9)
 *(.text)
 .text          0x00000046        0x2 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
                0x00000046                __vector_1
                0x00000046                __bad_interrupt
                0x00000046                __vector_6
                0x00000046                __vector_3
                0x00000046                __vector_7
                0x00000046                __vector_5
                0x00000046                __vector_4
                0x00000046                __vector_9
                0x00000046                __vector_2
 .text          0x00000048      0x1be LEDTimedCandle.o
                0x00000048                Rand
                0x0000008c                __vector_8
                0x00000126                resetWatchdog
                0x00000134                goToSleep
                0x00000160                doCandle
                0x000001de                setup
                0x000001f0                loop
 .text          0x00000206       0xce ./i2cmaster/i2cmaster.o
                0x00000216                i2c_init
                0x00000220                i2c_start
                0x00000228                i2c_rep_start
                0x0000023c                i2c_start_wait
                0x00000250                i2c_stop
                0x00000260                i2c_write
                0x00000298                i2c_readNak
                0x0000029c                i2c_readAck
                0x0000029e                i2c_read
 .text          0x000002d4        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text          0x000002d4        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text          0x000002d4        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x000002d4                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000002d4        0x6 LEDTimedCandle.o
                0x000002d4                main
 .text.libgcc.mul
                0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc   0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc   0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x000002da                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000002da        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
                0x000002da                exit
                0x000002da                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000002da        0x4 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 *(.fini0)
                0x000002de                _etext = .

.data           0x00800060        0x2 load address 0x000002de
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
 .data          0x00800060        0x1 LEDTimedCandle.o
                0x00800060                bLedIsOn
 .data          0x00800061        0x0 ./i2cmaster/i2cmaster.o
 .data          0x00800061        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .data          0x00800061        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .data          0x00800061        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800062                . = ALIGN (0x2)
 *fill*         0x00800061        0x1 
                0x00800062                _edata = .
                0x00800062                PROVIDE (__data_end, .)

.bss            0x00800062        0xe
                0x00800062                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800062        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
 .bss           0x00800062        0xe LEDTimedCandle.o
                0x00800062                randflag
                0x00800063                RAND
                0x00800064                NEXTBRIGHT
                0x00800065                PWM_VAL
                0x00800066                FRAME_CTR
                0x00800067                PWM_CTR
                0x00800068                off_hours
                0x00800069                on_hours
                0x0080006a                sec8_counter
 .bss           0x00800070        0x0 ./i2cmaster/i2cmaster.o
 .bss           0x00800070        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .bss           0x00800070        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .bss           0x00800070        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x00800070                PROVIDE (__bss_end, .)
                0x000002de                __data_load_start = LOADADDR (.data)
                0x000002e0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800070        0x0
                0x00800070                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800070                PROVIDE (__noinit_end, .)
                0x00800070                _end = .
                0x00800070                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x00000000     0x1050
 *(.stab)
 .stab          0x00000000      0xa80 LEDTimedCandle.o
 .stab          0x00000a80      0x5d0 ./i2cmaster/i2cmaster.o
                                0x5dc (size before relaxing)

.stabstr        0x00000000      0xea2
 *(.stabstr)
 .stabstr       0x00000000      0xea2 LEDTimedCandle.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x11
 *(.comment)
 .comment       0x00000000       0x11 LEDTimedCandle.o
                                 0x12 (size before relaxing)

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(LEDTimedCandle.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
FRAME_CTR                                         LEDTimedCandle.o
NEXTBRIGHT                                        LEDTimedCandle.o
PWM_CTR                                           LEDTimedCandle.o
PWM_VAL                                           LEDTimedCandle.o
RAND                                              LEDTimedCandle.o
Rand                                              LEDTimedCandle.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
__bss_end                                         /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                                                  LEDTimedCandle.o
__do_copy_data                                    /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
                                                  LEDTimedCandle.o
__heap_end                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
__init                                            /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
__stack                                           /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
__vector_1                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
__vector_2                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
__vector_3                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
__vector_4                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
__vector_5                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
__vector_6                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
__vector_7                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
__vector_8                                        LEDTimedCandle.o
                                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
__vector_9                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
__vector_default                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
__vectors                                         /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
_exit                                             /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
bLedIsOn                                          LEDTimedCandle.o
doCandle                                          LEDTimedCandle.o
exit                                              /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
goToSleep                                         LEDTimedCandle.o
i2c_init                                          ./i2cmaster/i2cmaster.o
                                                  LEDTimedCandle.o
i2c_read                                          ./i2cmaster/i2cmaster.o
i2c_readAck                                       ./i2cmaster/i2cmaster.o
i2c_readNak                                       ./i2cmaster/i2cmaster.o
i2c_rep_start                                     ./i2cmaster/i2cmaster.o
i2c_start                                         ./i2cmaster/i2cmaster.o
i2c_start_wait                                    ./i2cmaster/i2cmaster.o
i2c_stop                                          ./i2cmaster/i2cmaster.o
i2c_write                                         ./i2cmaster/i2cmaster.o
loop                                              LEDTimedCandle.o
main                                              LEDTimedCandle.o
                                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13a.o
off_hours                                         LEDTimedCandle.o
on_hours                                          LEDTimedCandle.o
randflag                                          LEDTimedCandle.o
resetWatchdog                                     LEDTimedCandle.o
sec8_counter                                      LEDTimedCandle.o
setup                                             LEDTimedCandle.o
